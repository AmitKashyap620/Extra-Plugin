import asyncio
import aiohttp
import os
from aiofiles import open as aio_open
from pyrogram import Client
from pyrogram.types import InputMediaPhoto
from bing_image_urls import bing_image_urls
from config import BANNED_USERS
from YukkiMusic import app
from pyrogram import filters
from pyrogram.types import InputMediaPhoto
from pyrogram.errors.exceptions.flood_420 import FloodWait

async def send_photos(send_photos, photo_urls):
    download_folder="downloads"
    photo_paths = []
    photo_cnt = 0
    messagesend = await message.reply_text("**üîç**")
    async with aiohttp.ClientSession() as session:
        for idx, url in enumerate(photo_urls):
            async with session.get(url) as response:
                if response.status == 200:
                    photo_path = os.path.join(download_folder, f"photo{idx + 1}.jpg")
                    async with aio_open(photo_path, 'wb') as f:
                        await f.write(await response.read())
                    photo_paths.append(photo_path)
                    try:
                        await messagesend.edit(f"**“ì·¥è·¥ú…¥·¥Ö {photo_cnt} …™·¥ç·¥Ä…¢·¥ás**")
                    except FloodWait as e:
                        asyncio.sleep(e.value)
                    photo_cnt+=1
    await messagesend.edit(f"**“ì·¥è·¥ú…¥·¥Ö {photo_cnt} …™·¥ç·¥Ä…¢·¥ás\n…¥·¥è·¥° ·¥ú·¥ò ü·¥è·¥Ä·¥Ö…™…¥…¢...**")
    media = [InputMediaPhoto(photo_path) for photo_path in photo_paths]
    try:
        await app.send_media_group(message.chat.id, media)
        await messagesend.delete()
    except Exception as e:
        await messagesend.edit(e)
        pass
    for photo_path in photo_paths:
        try:
            os.remove(photo_path)
        except OSError as e:
            print(f"Error: {photo_path} : {e.strerror}")
        except Exception:
            pass

@app.on_message(
    filters.command(["image"], prefixes=["/", "!", "."]) & ~BANNED_USERS
)
async def image_from_bing(_, message):
    chat_id = message.chat.id
    if len(message.command) < 2 and not message.reply_to_message:
        return await message.reply_text("**…¢…™·¥†·¥á …™·¥ç·¥Ä…¢·¥á …¥·¥Ä·¥ç·¥á “ì·¥è Ä s·¥á·¥Ä Ä·¥Ñ ú üîç**")

    if message.reply_to_message and message.reply_to_message.text:
        query = message.reply_to_message.text
    else:
        query = " ".join(message.command[1:])


    await send_photos(message, bing_image_urls(query, limit=9))


__MODULE__ = "I·¥ç·¥Ä…¢·¥á"
__HELP__ = """
/image [«´·¥ú·¥á Ä è] - ·¥õ·¥è …¢·¥á·¥õ ·¥õ·¥è·¥ò …™·¥ç·¥Ä…¢·¥ás “ì Ä·¥è·¥ç  ô…™…¥…¢
/wall | /wallpaper - [«´·¥ú·¥á Ä è] - ·¥õ·¥è …¢·¥á·¥õ  Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö ·¥°·¥Ä ü·¥ò·¥Ä·¥ò·¥á Ä
/cat - …¢·¥á·¥õ  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ñ·¥Ä·¥õ …™·¥ç·¥Ä…¢·¥ás
/dog - …¢·¥á·¥õ  Ä·¥Ä…¥·¥Ö·¥è·¥ç ·¥Ö·¥è…¢ …™·¥ç·¥Ä…¢·¥ás
"""